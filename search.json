[{"url":"/2023/01/29/%E5%88%9D%E8%AF%86C%E8%AF%AD%E8%A8%80/","content":"初识C语言（一）\n\n写C代码\n\nst=&gt;start: start op1=&gt;operation: Creat projectop2=&gt;operation: Creat fileop3=&gt;operation: Write source.fileop4=&gt;operation: Write codee=&gt;end: endst(right)-&gt;op1(right)-&gt;op2(right)-&gt;op3(right)-&gt;op4(right)-&gt;e\n\n\n数据类型\n\n\nchar\nshort\nint\nlong\nlong long\nfloat    ——单精度\ndouble   ——双精度\n\n为什么会有这么多类型？\n答：针对不同的数据大小所需要占用的内存，进行空间的分配有利于节省使用空间。\nsizeof（）函数作用：用于计算所申请的空间大小;\n计算机中的单位：bit——比特位  byte——字节\n#include&lt;stdio.h&gt;int main()&#123;\tprintf(&quot;%d\\n&quot;,sizeof(char));  return 0;&#125;\n\n\n变量和常量\n\n​\t变量的分类：局部变量和全局变量。\n\n局部变量：定义在代码块内部的变量\n全局变量：定义在代码块之外的变量\n\n#include &lt;studio.h&gt;//global var num1int num1 = 10;  int main()&#123;  //局部变量num2  int num2 = 10;  return 0;&#125;\n\n注意：C语言规定，变量要定义在输入代码块的最前面，否则代码执行时会报错。\n变量的类型不同，决定了它们具有不同的作用域和生命周期，对于局部变量，其作用域是变量所在的局部范围，生命周期则是进入作用域生命周期开始，出作用域生命周期结束；对于全局变量，其作用域是整个工程，生命周期是整个程序的生命周期。\n常量的类别：字面常量、用const修饰的常变量、#define定义的标识符常量、枚举常量（关键字enum）\n#include &lt;stdio.h&gt;enum Sex &#123;  MALE,FEMALE,SECRET&#125;;int main()&#123;  const int n=10; //使用const进行修饰，只是使变量n具有常属性，n仍然是变量  enum Sex s =FEMALE;//MALE，FEMALE，SECRET的值分别代表0，1，2；  return 0;&#125;\n\n\n\n\n字符串\n\n由双引号引起的一串字符串称为字符串字面值，其中空字符串也叫字符串。\n需要注意的是，字符串的结束标志是”\\0”的转义字符，在计算机计算字符串长度时，”\\0”是结束标志，但不算字符串中的内容。\nchar arr1[] = &quot;abc&quot;;//这种命名方式，会在字符串字符串结尾自动加上&quot;\\0&quot;的转义字符作为结束标志。同时该字符串长度为3.char arr2[] = &#123;&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;&#125;;//字符串arr2[]在计算字符串长度时会是一个随机值，因为计算机只有识别道转移字符&#x27;\\0&#x27;才会确定为字符串的结尾。\n\n\n转义字符\n\n转义字符即改变原来的意思,例如:”\\n”。\n\n选择语句\n\n常用的循环语句：\n\nwhile循环\nfor循环\ndo···while循环\n\n\n数组\n\n一组相同数据类型的变量集合。数组的下标是从0开始的。\nsizeof（）函数可以用来确定数组的大小。（所占用的字节大小）\n\n原码，反码，补码\n\n负数在二进制中存储时存储的是二进制的补码\n"},{"url":"/2023/02/08/%E5%88%9D%E8%AF%86C%E8%AF%AD%E8%A8%80%EF%BC%88%E4%BA%8C%EF%BC%89/","content":"初识C语言（二）\nC语言中常用的关键字\n\n\nregister关键字用来控制寄存器\n\n注意：在计算机中，数据存储在四个地方：寄存器、高速缓存、内存、硬盘\nregister int a =10;//这意味着建议把a定义成寄存器变量，注意这里是建议，具体要根据计算机程序设计的情况决定，由编译器进行判断是否将a定义成寄存器变量\n\n\ntypedy关键字—–类型重定义\n\ntypedef unsigned int u_int;//这样就把usigned int类型重定义成u_int类型，这样在定义usigned int 类型的变量时就可以使用u_int进行定义unsigned int num1;u_int num2;//以上两种定义方式等价\n\n注意：define不是关键字，它只是预处理指令。\n\nstatic关键字\n\n三个作用：\n（1）修饰局部变量，使局部变量的生命周期变长；\n（2）修饰全局变量，改变全局变量的作用域，使静态的全局变量只能在自己的所在的源文件内部使用，\t\t\t出除了源文件就没法使用了\n（3）修饰函数，改变函数的链接属性（外部链接属性——&gt;内部链接属性）\n\ndefine定义常量和宏\n\n#include &lt;stdio.h&gt;#define MAX 100 //#define定义的标识符常量int main()&#123;  int a = MAX;    return 0;&#125;\n\n//求所给两个数的最大值//1. 使用函数的方法#include &lt;stdio.h&gt;int Max(int x,int y)&#123;  if(x&gt;y)    return x;  else    return y;&#125;//2. 采用宏定义的方法#define MAX(X,Y) (X&gt;Y?X:Y)//优点是不用考虑数据类型了int main()&#123;  int a = 10;  int b = 20;    int max = Max(a,b);  printf(&quot;max = %d\\n&quot;,max);    max = MAX(a,b);  printf(&quot;max = %d\\n&quot;,max);    return 0;&#125;\n\n\n\n\n指针\n\n内存：内存shi dian\n"},{"title":"Hello World","url":"/2022/05/07/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"搭建个人博客","url":"/2022/05/09/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","content":"\n博客对于现在很多的技术人员应该都是必不可少的，无论你是从事IT行业或者的通信行业，书写个人博客都是一件非常有意义的事情，通过书写个人博客，我们可以把项目中遇到的问题记录下来加深记忆，同时，我们在学习新的知识点的时候，通过书写博客，可以把该知识点记录下来，以方便在次的使用，因此对于技术行业的工作者来说，写博客时间非常重要的事情。本篇博客也是希望通过我的经验来帮助你们快速搭建属于自己的博客，需要注意的是，本次博客搭建是在Mac上进行的，但是无论你是苹果系统还是Windows系统，搭建博客的过程都是一样的，唯一的差别可能是操作命令的差别，这点希望注意。\n\n","tags":["hexo"]}]