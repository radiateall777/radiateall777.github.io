<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-03-12T12:20:06.876Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>指针初阶</title>
    <link href="http://example.com/2023/03/12/%E6%8C%87%E9%92%88/"/>
    <id>http://example.com/2023/03/12/%E6%8C%87%E9%92%88/</id>
    <published>2023-03-12T12:20:06.876Z</published>
    <updated>2023-03-12T12:20:06.876Z</updated>
    
    <content type="html"><![CDATA[<ol><li>指针的概念</li></ol><blockquote><p>在计算机科学中，指针（pointer）是编程语言中的一个对象，利用地址，他的值直接指向存在电脑存储器中另一个地方的值，由于通过地址可以找到所需的变量单元，可以说指针指向该变量单元。因此，将地址形象化为指针。（即通过它可以找到以它为地址的内存单元。</p></blockquote><p><strong>简单来说，指针是个变量，用来存放内存的地址</strong></p><ol start="2"><li>指针类型</li></ol><ul><li>指针类型决定了，指针在解引用操作时，所能访问的空间大小</li><li>决定了指针+ - 整数时，指针的步长</li></ul><p>野指针概念：野指针就是指针变量指向的位置是未知的。（局部的指针变量未初始化就被初始化为一个随机值，这样做是有很大问题的）。</p><p><strong>指针一定要进行初始化</strong></p><p>规避野指针的方法：</p><ul><li>指针初始化</li><li>小心指针越界</li><li>指针指向空间释放，将指针置为空可以保留该指针</li><li>指针使用之前必须检验指针的有效性</li></ul><ol start="3"><li>指针运算</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指针加减整数</span></span><br><span class="line"><span class="comment">//指针减指针得到中间元素的个数</span></span><br><span class="line">arr[<span class="number">10</span>] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,&amp;arr[<span class="number">9</span>]-&amp;arr[<span class="number">0</span>]);<span class="comment">//打印中间元素的个数：9</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用指针模拟strlen函数的实现</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">char</span> *arr)</span>&#123;</span><br><span class="line">  <span class="comment">//int count = 0;</span></span><br><span class="line">  <span class="type">char</span>* start = arr;</span><br><span class="line">  <span class="type">char</span>* end = arr;</span><br><span class="line">  <span class="keyword">while</span>(*arr != <span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">    end++;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> end - start;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>指针和数组</li></ol><p>在前面学习中其实已经讨论过，在大多数情况下，数组名表示首元素的地址，但是有两种例外情况：</p><ul><li>sizeof（数组名）这里的数组名表示整个数组，此时计算整个数组所占内存空间的大小。</li><li>&amp;数组名，这时数组名表示的是整个数组的地址，而不是首元素的地址。</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,arr);<span class="comment">//此时数组名表示首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr[<span class="number">0</span>]);<span class="comment">//这种情况和上面等价，表示首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%p\n&quot;</span>,&amp;arr);<span class="comment">//此时数组名表示整个数组的地址，虽然在值上与上面两种情况相同，但它们的含义已经不一样了</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;指针的概念&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在计算机科学中，指针（pointer）是编程语言中的一个对象，利用地址，他的值直接指向存在电脑存储器中另一个地方的值，由于通过地址可以找到所需的变量单元，可以说指针指向该变量单元。因此，将地址形象</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>操作符详解</title>
    <link href="http://example.com/2023/03/11/%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    <id>http://example.com/2023/03/11/%E6%93%8D%E4%BD%9C%E7%AC%A6/</id>
    <published>2023-03-11T11:12:36.311Z</published>
    <updated>2023-03-12T02:13:12.956Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>操作符的分类</strong></p><ul><li><p>算术操作符（+，-，*，&#x2F;，%）；</p></li><li><p>移位操作符（&lt;&lt; 左移操作符    &gt;&gt; 右移操作符）</p></li><li><p>位操作符（&amp;，^，｜）</p></li><li><p>单目操作符（sizeof（））</p></li><li><p>关系操作符（&#x3D;&#x3D;，&gt;&#x3D;，&lt;&#x3D;，！&#x3D;，&gt;，&lt;）</p></li><li><p>逻辑操作符（&amp;&amp;，||）</p></li><li><p>条件操作符（exp？exp1：exp2；）</p></li><li><p>赋值操作符</p></li></ul></li><li><p>移位操作符详解</p></li></ol><p>​移位操作符主要包含两种移位方式：</p><ul><li>算术右移：右边丢弃左边补原符号位（普遍）</li><li>逻辑右移：右边丢弃，左边补零</li></ul><blockquote><p>整数的二进制表示有：原码，反码，补码</p><p>整数在计算机中主要是以补码的方式进行存储的，对于正整数而言，其原，反，补是相同的，但是对于负整数而言则不一样。</p></blockquote><p>例如：负整数 -1</p><p>原码：10000000000000000000000000000001</p><p>反码：11111111111111111111111111111110</p><p>补码：11111111111111111111111111111111</p><ol start="3"><li>&amp;，｜，^操作符的含义</li></ol><p>​这三种操作符都是位操作符，只作用于整数；</p><p>​&amp; ——按位与（2进制位）</p><p>​｜——按位或（2进制位）</p><p>​^ ——按位异或（2进制位）相同为0，不同为1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//位操作符具有非常实际的应用</span></span><br><span class="line"><span class="comment">//例如：交换A和B的值</span></span><br><span class="line"><span class="comment">//要求：不允许创建临时变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法1:</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> A = <span class="number">9</span>;</span><br><span class="line">  <span class="type">int</span> B = <span class="number">10</span>;</span><br><span class="line">  <span class="comment">//加减法</span></span><br><span class="line">  A = A + B;</span><br><span class="line">  B = A - B;</span><br><span class="line">  A = A - B;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//利用加减法进行这种交换存在问题，那就是A+B可能会产生溢出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2:</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> b = <span class="number">9</span>;</span><br><span class="line">  <span class="comment">//异或法</span></span><br><span class="line">  a = a^b;</span><br><span class="line">  b = a^b;</span><br><span class="line">  a = a^b;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写代码，求一个整数在内存中二进制位中1的个数</span></span><br><span class="line"><span class="comment">//方法1:</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="comment">//(unsigned int)n;</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> m = (<span class="type">unsigned</span> <span class="type">int</span>)n;</span><br><span class="line">    <span class="keyword">while</span>(m != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((m%<span class="number">2</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        m = m/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,count);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2:</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> num;</span><br><span class="line">    <span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//利用位操作符进行计算</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;<span class="number">32</span> ; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">1</span> == ((num&gt;&gt;i)&amp;<span class="number">1</span>))&#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//num&gt;&gt;i;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>单目操作符的几个特例</li></ol><ul><li>sizeof()操作符</li></ul><blockquote><p>Sizeof()操作符为单目操作符，用于计算变量所占内存空间的大小（单位为字节）</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> arr[<span class="number">10</span>];<span class="comment">//去掉数组名剩下的就是数组类型</span></span><br><span class="line"></span><br><span class="line"><span class="type">short</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="keyword">sizeof</span>(s=a+<span class="number">5</span>));<span class="comment">//结果为2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,s);<span class="comment">//结果为0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//造成上述现象的原因是在sizeof（s = a+5）的括号中表达式并不会真正的参与运算</span></span><br></pre></td></tr></table></figure><ul><li>～按位取反</li></ul><ol start="5"><li><p>&amp;&amp;，||逻辑操作符的含义</p><ul><li>&amp;&amp;：只要左边算出了假，后面的代码将不再执行</li><li>||：只要左边算出了真，后面的代码将不再执行</li></ul></li><li><p>逗号表达式</p></li></ol><blockquote><p>逗号表达式：从左到右依次执行，整个表达式的结果是左后一个表达式的结果；</p></blockquote><ol start="7"><li>隐式类型转换</li></ol><p>​C的整形运算总是至少以缺省整型类型的精度来进行的，为提高精度，表达式中字符和短整型操作数在使用之前变为普通整型，这种转换成为整型提升。</p><p><strong>注意：整型提升是按照变量的数据类型的符号位进行提升的。</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> a = <span class="number">3</span>;<span class="comment">//二进制为：00000011</span></span><br><span class="line"><span class="comment">//整型提升以后：00000000 00000000 00000000 00000011</span></span><br><span class="line"><span class="type">char</span> b = <span class="number">127</span>;<span class="comment">//二进制为：01111111</span></span><br><span class="line"><span class="comment">//整型提升以后：00000000 00000000 00000000 01111111</span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> c = a+b; <span class="comment">//10000010  - </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c); <span class="comment">//11111111 11111111 11111111 10000010 - 补码</span></span><br><span class="line"><span class="comment">//11111111 11111111 11111111 10000001 - 反码</span></span><br><span class="line"><span class="comment">//10000000 00000000 00000000 01111110 - 原码 - -126</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//整型提升：</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">char</span> a = <span class="number">0xb6</span>;</span><br><span class="line">  <span class="type">short</span> b = <span class="number">0xb600</span>;</span><br><span class="line">  <span class="type">int</span> c = <span class="number">0xb6000000</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(a == <span class="number">0xb6</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(b == <span class="number">0xb600</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span>(c == <span class="number">0xb6000000</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c&quot;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意“==”比较操作符也相当于运算，需要进行整型提升，因此本题结果只打印‘c’</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;操作符的分类&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;算术操作符（+，-，*，&amp;#x2F;，%）；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;移位操作符（&amp;lt;&amp;lt; 左移操作符    &amp;gt;&amp;gt; 右移操作符）&lt;/p&gt;
&lt;/li</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>三字棋</title>
    <link href="http://example.com/2023/03/11/%E4%B8%89%E5%AD%90%E6%A3%8B11/"/>
    <id>http://example.com/2023/03/11/%E4%B8%89%E5%AD%90%E6%A3%8B11/</id>
    <published>2023-03-11T03:09:48.422Z</published>
    <updated>2023-03-12T02:16:06.885Z</updated>
    
    <content type="html"><![CDATA[<p>用C语言实现一个三子棋小游戏：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写主函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;*************************&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;**1. 开始游戏  2. 退出游戏**&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;*************************&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//游戏的整个算法实现</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">char</span> ret = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">//数组走出的棋盘信息</span></span><br><span class="line">  <span class="type">char</span> board[ROW][COL] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  <span class="comment">//初始化棋盘</span></span><br><span class="line">  InitBoard(board,ROW,COL);</span><br><span class="line">  <span class="comment">//打印棋盘</span></span><br><span class="line">  DisplayBoard(board,ROW,COL);</span><br><span class="line">  <span class="comment">//开始下棋</span></span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="comment">//玩家下棋</span></span><br><span class="line">    PlayerMove(board,ROW,COL);</span><br><span class="line">    DisplayBoard(board,ROW,COL);</span><br><span class="line">    <span class="comment">//判断玩家是否赢</span></span><br><span class="line">    ret = IsWin(board,ROW,COL);</span><br><span class="line">    <span class="keyword">if</span>(ret != <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//电脑下棋</span></span><br><span class="line">    ComputerMove(board,ROW,COL);</span><br><span class="line">    DisplayBoard(board,ROW,COL);</span><br><span class="line">    <span class="comment">//判断电脑是否赢</span></span><br><span class="line">    ret = IsWin(board,ROW,COL);</span><br><span class="line">    <span class="keyword">if</span>(ret != <span class="string">&#x27;C&#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> input;</span><br><span class="line">  <span class="comment">//已知游戏最少玩一次</span></span><br><span class="line">  <span class="keyword">do</span>&#123;</span><br><span class="line">    menu();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请选择：&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">    <span class="keyword">switch</span>(input)&#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        game();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;退出游戏：&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;选择错误，请重新选择：&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;<span class="keyword">while</span>(input);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来在game.h文件中定义和声明整个游戏实现所需要常量的定义和函数声明：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROW 3</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COL 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//告诉我们四种状态</span></span><br><span class="line"><span class="comment">//玩家赢 - ‘*’</span></span><br><span class="line"><span class="comment">//电脑赢 - ‘#’</span></span><br><span class="line"><span class="comment">//平局 - ‘Q’</span></span><br><span class="line"><span class="comment">//继续 - ‘C&#x27;</span></span><br><span class="line"><span class="type">char</span> <span class="title function_">IsWin</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接下来在game.c文件中实现在game.h文件中声明的函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;game.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;row; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>;j&lt;col; ++j)&#123;</span><br><span class="line">      board[i][j] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">DisplayBoard</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i&lt;row; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j&lt;col; j++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot; %c &quot;</span>,board[i][j]);</span><br><span class="line">      <span class="keyword">if</span>(j&lt;col<span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="comment">//打印分割行</span></span><br><span class="line">    <span class="keyword">if</span>(i &lt; row <span class="number">-1</span>)&#123;</span><br><span class="line">      <span class="keyword">for</span>( j = <span class="number">0</span>; j&lt;col ; ++j)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;---&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(j &lt; col<span class="number">-1</span>)</span><br><span class="line">          <span class="built_in">printf</span>(<span class="string">&quot;|&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PlayerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>&#123;</span><br><span class="line">  <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;玩家走：&gt;&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入坐标：&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    <span class="comment">//判断坐标的合法性</span></span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">1</span> &amp;&amp; x&lt;=row &amp;&amp; y&gt;= <span class="number">1</span> &amp;&amp; y&lt;= col)&#123;</span><br><span class="line">      <span class="keyword">if</span>(board[x<span class="number">-1</span>][y<span class="number">-1</span>] == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">        board[x<span class="number">-1</span>][y<span class="number">-1</span>] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;该坐标被占用\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;请输入合法坐标\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>&#123;</span><br><span class="line">  <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> y = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;电脑走：&gt;\n&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    x = rand()%row;</span><br><span class="line">    y = rand()%col;</span><br><span class="line">    <span class="keyword">if</span>(board[x][y] == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">      board[x][y] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查棋盘是否已满</span></span><br><span class="line"><span class="comment">//返回1，表示棋盘满了；返回0，表示棋盘未满；</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">IsFull</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; row; ++i)&#123;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; col; ++j)&#123;</span><br><span class="line">      <span class="keyword">if</span>(board[i][j] == <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">ComputerMove</span><span class="params">(<span class="type">char</span> board[ROW][COL],<span class="type">int</span> row,<span class="type">int</span> col)</span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">//检查横三行</span></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span> ;i &lt; row; ++i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(board[i][<span class="number">0</span>] == board[i][<span class="number">1</span>] &amp;&amp; board[i][<span class="number">1</span>] == board[i][<span class="number">2</span>]&amp;&amp; board[i][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> board[i][<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检查竖三列</span></span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; col; ++i)&#123;</span><br><span class="line">    <span class="keyword">if</span>(board[<span class="number">0</span>][i] == board[<span class="number">1</span>][i] &amp;&amp; board[<span class="number">1</span>][i] == board[<span class="number">2</span>][i]&amp;&amp; board[i][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> board[<span class="number">1</span>][i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//检查对角线</span></span><br><span class="line">  <span class="keyword">if</span>(board[<span class="number">0</span>][<span class="number">0</span>] == board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">2</span>]&amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> board[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(board[<span class="number">0</span>][<span class="number">2</span>] == board[<span class="number">1</span>][<span class="number">1</span>] &amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] == board[<span class="number">2</span>][<span class="number">0</span>]&amp;&amp; board[<span class="number">1</span>][<span class="number">1</span>] != <span class="string">&#x27; &#x27;</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> board[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">//判断是否平局</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="number">1</span> == IsFull(board,ROW,COL))&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;用C语言实现一个三子棋小游戏：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/s</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>数组-Array</title>
    <link href="http://example.com/2023/03/10/%E6%95%B0%E7%BB%84/"/>
    <id>http://example.com/2023/03/10/%E6%95%B0%E7%BB%84/</id>
    <published>2023-03-10T10:11:05.908Z</published>
    <updated>2023-03-10T10:11:05.908Z</updated>
    
    <content type="html"><![CDATA[<ol><li>数组的概念</li></ol><blockquote><p>数组指的是一组相同类型元素的集合。（在这里的类型可以是C语言中内置的数据类型，如：int，float，double等，也可以是我们自定义的数据类型）</p></blockquote><ol start="2"><li>一维数组的创建和初始化</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建方式 type_t arr_name[const_n]</span></span><br><span class="line"><span class="comment">//type_t：指数组的类型</span></span><br><span class="line"><span class="comment">//const_n：是一个常量表达式，用来指定数组的大小，注意不可使用变量</span></span><br></pre></td></tr></table></figure><ol start="3"><li>数组的使用和存储</li></ol><ul><li>数组使用下标来访问</li><li>数组的大小可以通过计算来得到</li></ul><blockquote><p>在计算机中，数组在内存中是连续存放的，定义数组时会在计算机内存中开辟一组连续的内存空间用来存储数组的数据元素。</p></blockquote><ol start="4"><li>数组作为函数参数</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//冒泡排序函数将一个数组进行排序</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Bubble_sort</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> sz)</span>&#123;</span><br><span class="line">    <span class="comment">//实现冒泡排序</span></span><br><span class="line">    <span class="type">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;sz<span class="number">-1</span> ;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j= <span class="number">0</span>;j&lt;sz-i<span class="number">-1</span>;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(*(arr+j)&gt;*(arr+<span class="number">1</span>+j))&#123;</span><br><span class="line">                temp = *(arr+j);</span><br><span class="line">                *(arr+j) = *(arr+<span class="number">1</span>+j);</span><br><span class="line">                *(arr+<span class="number">1</span>+j) = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> arr[] = &#123;<span class="number">3</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>&#125;;</span><br><span class="line">    <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    Bubble_sort(arr,sz);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;sz ; i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面堆冒泡排序进行优化：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">Bubble_sort</span><span class="params">(<span class="type">int</span> arr,<span class="type">int</span> sz)</span>&#123;</span><br><span class="line">  <span class="comment">//假设所给数组已经有序，如果采用上述算法，程序依然会执行for循环不断进行比较和交换</span></span><br><span class="line">  <span class="comment">//这会导致没必要的浪费</span></span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;sz<span class="number">-1</span>;i++)&#123;</span><br><span class="line">    <span class="type">int</span> flag = <span class="number">1</span>;<span class="comment">//假设这一次要排序的数据已经有序</span></span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>;j&lt;sz<span class="number">-1</span>-i;j++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(arr[j]&gt;arr[j+<span class="number">1</span>])&#123;</span><br><span class="line">        <span class="type">int</span> temp = arr[j];</span><br><span class="line">        arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">        arr[j+<span class="number">1</span>] = temp;</span><br><span class="line">        flag = <span class="number">0</span>;<span class="comment">//本次循环排序数据不完全有序</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>在大多数情况下，数组名等于首元素地址，当有两个例外情况：</p></blockquote><ul><li>sizeof（数组名）此时数组名表示整个数组</li><li>&amp;数组名，数组名指得是整个数组，&amp;数组名取出整个数组的地址</li></ul><p><strong>数组地址不等于数组首元素地址。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;数组的概念&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;数组指的是一组相同类型元素的集合。（在这里的类型可以是C语言中内置的数据类型，如：int，float，double等，也可以是我们自定义的数据类型）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol s</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>C语言中的函数</title>
    <link href="http://example.com/2023/02/17/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2023/02/17/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%87%BD%E6%95%B0/</id>
    <published>2023-02-17T13:08:30.405Z</published>
    <updated>2023-02-17T13:08:30.405Z</updated>
    
    <content type="html"><![CDATA[<ol><li>函数定义</li></ol><blockquote><p>在计算机科学中，子程序是一个大型程序中的某部分代码，由一个或者多个语句块组成，它负责完成某项特定任务，而且相对于其它代码具有相对独立性。</p></blockquote><p>对于函数，一般会有输入参数并有返回值，函数提供对于过程的封装和细节的隐藏，这些代码通常被集成为软件库。</p><ol start="2"><li><p>C语言常用的函数库</p><ul><li><p>IO函数</p></li><li><p>字符串操作函数</p></li><li><p>字符操作函数</p></li><li><p>内存操作函数</p></li><li><p>时间&#x2F;日期函数</p></li><li><p>数学函数</p></li><li><p>其它库函数</p></li></ul></li><li><p>自定义函数</p></li></ol><p>组成：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ret_type <span class="title function_">fun_name</span><span class="params">(para1 ,*)</span>&#123;</span><br><span class="line">  statement;</span><br><span class="line">&#125;</span><br><span class="line">ret_type: 返回类型</span><br><span class="line">fun_name: 函数名</span><br><span class="line">paral: 函数参数</span><br><span class="line"><span class="comment">//函数体交代函数是如何实现的</span></span><br></pre></td></tr></table></figure><ol start="4"><li>函数的参数</li></ol><p>实际参数：真是传给函数的参数，叫实参；</p><p>形式参数：函数名后的括号中的参数。</p><p>当实参传给形参时，形参只是实参的一份临时拷贝，因此对于形参的修改并不会改变实参的实际值的大小。</p><ol start="5"><li><p>函数的调用</p><ul><li>传值调用：函数的实参和形参分别占用不同的内存块，对形参的修改不会影响到实参</li><li>传址调用：把函数外部创建的变量的内存地址传递给函数的一种调用方式。</li></ul><p>这种方式可以让函数与函数外部的变量建立起真正的联系，也就是函数内部可以直接操作函数外部的变量。</p></li><li><p>函数的声明和定义</p><ul><li>函数声明：告诉编译器有一个函数叫什么，参数是什么，返回类型是什么，但具体函数的实现是否存在无关紧要；函数声明一般出现在函数使用之前，要满足先声明后使用；函数声明一般放在头文件中。</li><li>函数定义：指函数的具体实现，交代函数的功能。</li></ul><p>函数的定义和声明的使用分别放在.c和.h文件中。</p></li><li><p>函数的递归</p></li></ol><p>​递归：函数调用自身的编程技巧称为递归。（递归的思想：把大师化小）。</p><p>​递归的两个必要条件：</p><ul><li>存在限制条件，当满足这个条件时，递归不在继续。</li><li>每次递归调用都要越来越接近这个限制条件。</li></ul><p>递归中需要注意的问题：栈溢出。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写函数不允许创建临时变量，求字符串长度</span></span><br><span class="line"><span class="comment">//利用递归调用的思想</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">my_strlen</span><span class="params">(<span class="type">int</span> arr[])</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(*arr != <span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> my_strlen(str+<span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">char</span> arr[] = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">  <span class="type">int</span> len = my_strlen(arr);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,len);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写函数，求n的阶乘</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">fac</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(n&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fac(n<span class="number">-1</span>) * n ;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//编写函数，实现求解斐波那契数列</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Fib</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Fib(n<span class="number">-1</span>)+Fib(n<span class="number">-2</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需要注意的是，每一次递归的过程都会产生很大的空间浪费，因为递归会产生量的重复操作。</span></span><br><span class="line"><span class="comment">//使用非递归的思想求解第n个斐波那契数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Fib</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line">  <span class="type">int</span> a = <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> b = <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> c = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(n&gt;<span class="number">2</span>)&#123;</span><br><span class="line">    c = a+b;</span><br><span class="line">    a = b;</span><br><span class="line">    b = c;</span><br><span class="line">    n--;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;函数定义&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在计算机科学中，子程序是一个大型程序中的某部分代码，由一个或者多个语句块组成，它负责完成某项特定任务，而且相对于其它代码具有相对独立性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对于函数，一般会有</summary>
      
    
    
    
    
    <category term="C-语言" scheme="http://example.com/tags/C-%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>分支和循环练习</title>
    <link href="http://example.com/2023/02/13/%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%83%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2023/02/13/%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%83%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2023-02-13T13:13:02.689Z</published>
    <updated>2023-03-12T02:15:30.795Z</updated>
    
    <content type="html"><![CDATA[<p>猜数字游戏</p><ul><li>电脑生成一个随机数</li><li>猜数字</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;****1.start   2.end****\n&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;***********************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">game</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> ret;</span><br><span class="line">  <span class="type">int</span> guess;</span><br><span class="line">  ret = rand()%<span class="number">100</span> + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数字:&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;guess);</span><br><span class="line">    <span class="keyword">if</span>(guess&gt;ret)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;猜大了\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(guess &lt; ret)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;猜小了\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;恭喜你，猜对了\n&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> input;</span><br><span class="line">  srand((<span class="type">unsigned</span> <span class="type">int</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">  <span class="keyword">do</span>&#123;</span><br><span class="line">    menu();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;input);</span><br><span class="line">    <span class="keyword">switch</span>(input)&#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;退出游戏&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        game();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;选择错误&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;<span class="keyword">while</span>(input);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;猜数字游戏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;电脑生成一个随机数&lt;/li&gt;
&lt;li&gt;猜数字&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;</summary>
      
    
    
    
    
    <category term="C-练习  猜数字游戏" scheme="http://example.com/tags/C-%E7%BB%83%E4%B9%A0-%E7%8C%9C%E6%95%B0%E5%AD%97%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>分支和循环的练习</title>
    <link href="http://example.com/2023/02/12/%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%83%E4%B9%A0/"/>
    <id>http://example.com/2023/02/12/%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF%E7%BB%83%E4%B9%A0/</id>
    <published>2023-02-12T07:44:04.437Z</published>
    <updated>2023-02-13T12:56:23.078Z</updated>
    
    <content type="html"><![CDATA[<ol><li>编写代码计算n的阶乘</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> n;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> ret = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">    ret *= i;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写代码，计算1！+2！+···+10！</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> n = <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> ret = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span>(n=<span class="number">1</span>;n&lt;=<span class="number">10</span>;n++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>; j&lt;=i; j++)&#123;</span><br><span class="line">      ret *=j;</span><br><span class="line">    &#125;</span><br><span class="line">    sum = sum+ret;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//还可以对上述代码进行优化，减少重复的阶乘运算</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> i= <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> j= <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> ret = <span class="number">1</span>;</span><br><span class="line">  <span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(i = <span class="number">1</span>; i&lt;=<span class="number">10</span>; i++)&#123;</span><br><span class="line">    ret = ret*i;</span><br><span class="line">    sum += ret;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>编写代码，可以在一个有序数组中查找一个具体的数字n，编写int binsearch(int x,int v[],int n),功能：v[0]&lt;&#x3D;v[1]&lt;&#x3D;v[2]&lt;&#x3D;···&lt;&#x3D;v[n-1]的数组中查找x。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> arr[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>&#125;;</span><br><span class="line">  <span class="type">int</span> k = <span class="number">7</span>;</span><br><span class="line">  <span class="type">int</span> sz = <span class="keyword">sizeof</span>(arr)/<span class="keyword">sizeof</span>(arr[<span class="number">0</span>]);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i&lt;sz ;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(arr[i] == k)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;下标是：%d&quot;</span>,i);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i == sz)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;search fail\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//采用函数的方法</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">binsearch</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> v[],<span class="type">int</span> n)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x != v[i])</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i&gt;=n)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> v[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; ++j) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,v[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d\n&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (binsearch(x,v[<span class="number">10</span>],<span class="number">10</span>) == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;succes\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;fail\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写代码，演示多个字符从两端移动向中间汇聚；</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">char</span> arr1[] = <span class="string">&quot;welcome to bit!!!!!!&quot;</span>;</span><br><span class="line">  <span class="type">char</span> arr2[] = <span class="string">&quot;####################&quot;</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="type">int</span> left = <span class="number">0</span>;</span><br><span class="line">  <span class="type">int</span> right = <span class="built_in">strlen</span>(arr1)<span class="number">-1</span>;</span><br><span class="line">  <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">    arr2[left] = arr1[left];</span><br><span class="line">    arr2[right] = arr1[right];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,arr2);</span><br><span class="line">    left++;</span><br><span class="line">    right--;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>编写代码，使三个数从大到小输出</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> x,y,z;</span><br><span class="line">  <span class="type">int</span> temp;</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span>(x&lt;y)&#123;</span><br><span class="line">    temp = x;</span><br><span class="line">    x = y;</span><br><span class="line">    y = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(x &lt; z)&#123;</span><br><span class="line">    temp = z;</span><br><span class="line">    x = z;</span><br><span class="line">    z = temp;</span><br><span class="line">  &#125;</span><br><span class="line">   <span class="keyword">if</span>(y &lt; z)&#123;</span><br><span class="line">     temp = y;</span><br><span class="line">     y = z;</span><br><span class="line">     z = temp;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>,x,y,z);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>编写代码，模拟用户登陆场景，且只可登陆3次</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">  <span class="type">char</span> password[<span class="number">20</span>];</span><br><span class="line">  <span class="keyword">for</span>( i = <span class="number">0</span>; i&lt;<span class="number">3</span> ; ++i)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入密码：&gt;&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s\n&quot;</span>,password);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(password , <span class="string">&quot;123456&quot;</span>) == <span class="number">0</span>)&#123;<span class="comment">//strcmp函数用于比较两个字符串是否相等，切记字符串的比较不可使用’==‘。</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(i == <span class="number">3</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;fail&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;编写代码计算n的阶乘&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    
    <category term="C-练习" scheme="http://example.com/tags/C-%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>分支和循环</title>
    <link href="http://example.com/2023/02/09/%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF/"/>
    <id>http://example.com/2023/02/09/%E5%88%86%E6%94%AF%E5%92%8C%E5%BE%AA%E7%8E%AF/</id>
    <published>2023-02-09T12:43:13.042Z</published>
    <updated>2023-02-09T14:44:19.102Z</updated>
    
    <content type="html"><![CDATA[<ol><li>分支语句主要包括两种</li></ol><ul><li>if - else语句</li></ul><p>​注意：if-else语句默认只能控制一条语句；else的匹配是依据最近的if的匹配原则。</p><ul><li>switch语句</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(整形表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> 整形常量表达式:</span><br><span class="line">    语句项；</span><br><span class="line">&#125;<span class="comment">//注意break的使用</span></span><br></pre></td></tr></table></figure><ol start="2"><li>循环语句主要是三种</li></ol><ul><li>while循环</li><li>for循环</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>（表达式<span class="number">1</span>；表达式<span class="number">2</span>；表达式<span class="number">3</span>；）&#123;</span><br><span class="line">  循环语句；</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//表达式1:初始化部分，用于初始化值</span></span><br><span class="line"><span class="comment">//表达式2：条件判断部分，用于判断循环何时终止</span></span><br><span class="line"><span class="comment">//表达式3:调整部分，用于循环条件的调整</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(;;)&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;hehe&quot;</span>);</span><br><span class="line">&#125;<span class="comment">//此情况下判断条件恒为真，程序为死循环</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：不可在for循环体内改变循环变量，防止for循环失去控制；建议for语句的循环控制变量的取值采用“前闭后开”的写法。</p><p>for循环初始化、调整和判断都可以省略，但是，for循环的判断部分如果省略，那判断条件就恒为真。</p><ul><li>do···while循环</li></ul><p>该情况下，循环语句至少执行一次。</p><p>这里介绍两个关键字：break和continue。</p><p>break：在循环中只要遇到break，就停止后面的所有循环，直接终止循环；</p><p>continue：用于终止本次循环，也就是不再执行continue语句后面的代码，直接跳到循环的判断部分。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">10</span>)&#123;</span><br><span class="line">  <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">    <span class="keyword">continue</span>;<span class="comment">//直接返回到循环的判断部分</span></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">  i++;</span><br><span class="line">&#125;<span class="comment">//程序进入死循环</span></span><br></pre></td></tr></table></figure><ol start="3"><li>getchar()与putchar()函数</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> ch = getchar();</span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((ch = getchar()) != EOF)&#123;</span><br><span class="line">  <span class="built_in">putchar</span>(ch);</span><br><span class="line">&#125;<span class="comment">//EOF - end of file --- -1稳健的结束标志</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> password[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,password);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请确认(y/n)：&gt;&quot;</span>);</span><br><span class="line">ret = getchar();</span><br><span class="line"><span class="keyword">if</span>(ret == <span class="string">&#x27;y&#x27;</span>)&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;确认成功\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;放弃确认\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这段代码存在的问题是，字符串输入在缓存区中会以&#x27;\0&#x27;为结束的标志位，所以getchar（）函数是从缓存区中读取读取所需要的内容，这样就使得getchar（）读取的内容为&#x27;\n&#x27;,而不是y/n,此时代码就出现了问题。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//对代码进行修正</span></span><br><span class="line"><span class="type">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> password[<span class="number">20</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,password);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请确认(y/n)：&gt;&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>)&#123;</span><br><span class="line">  ;</span><br><span class="line">&#125;<span class="comment">//清空缓存区</span></span><br><span class="line">ret = getchar();</span><br><span class="line"><span class="keyword">if</span>(ret == <span class="string">&#x27;y&#x27;</span>)&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;确认成功\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;放弃确认\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;分支语句主要包括两种&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;if - else语句&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​		注意：if-else语句默认只能控制一条语句；else的匹配是依据最近的if的匹配原则。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;switch语句&lt;/li&gt;</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>初识C语言（二）</title>
    <link href="http://example.com/2023/02/08/%E5%88%9D%E8%AF%86C%E8%AF%AD%E8%A8%80%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2023/02/08/%E5%88%9D%E8%AF%86C%E8%AF%AD%E8%A8%80%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2023-02-08T14:03:37.855Z</published>
    <updated>2023-02-09T12:26:16.550Z</updated>
    
    <content type="html"><![CDATA[<ol><li><strong>C语言中常用的关键字</strong></li></ol><ul><li>register关键字用来控制寄存器</li></ul><p>注意：在计算机中，数据存储在四个地方：寄存器、高速缓存、内存、硬盘</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">register</span> <span class="type">int</span> a =<span class="number">10</span>;<span class="comment">//这意味着建议把a定义成寄存器变量，注意这里是建议，具体要根据计算机程序设计的情况决定，由编译器进行判断是否将a定义成寄存器变量</span></span><br></pre></td></tr></table></figure><ul><li>typedy关键字—–类型重定义</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">int</span> u_int;<span class="comment">//这样就把usigned int类型重定义成u_int类型，这样在定义usigned int 类型的变量时就可以使用u_int进行定义</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> num1;</span><br><span class="line">u_int num2;</span><br><span class="line"><span class="comment">//以上两种定义方式等价</span></span><br></pre></td></tr></table></figure><p>注意：define不是关键字，它只是预处理指令。</p><ul><li>static关键字</li></ul><p>三个作用：</p><p>（1）修饰局部变量，使局部变量的生命周期变长；</p><p>（2）修饰全局变量，改变全局变量的作用域，使静态的全局变量只能在自己的所在的源文件内部使用，出除了源文件就没法使用了</p><p>（3）修饰函数，改变函数的链接属性（外部链接属性——&gt;内部链接属性）</p><ol start="2"><li><strong>define定义常量和宏</strong></li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX 100 <span class="comment">//#define定义的标识符常量</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> a = MAX;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//求所给两个数的最大值</span></span><br><span class="line"><span class="comment">//1. 使用函数的方法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Max</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(x&gt;y)</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 采用宏定义的方法</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX(X,Y) (X&gt;Y?X:Y)<span class="comment">//优点是不用考虑数据类型了</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">  <span class="type">int</span> b = <span class="number">20</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="type">int</span> max = Max(a,b);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;max = %d\n&quot;</span>,max);</span><br><span class="line">  </span><br><span class="line">  max = MAX(a,b);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;max = %d\n&quot;</span>,max);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li><strong>指针</strong></li></ol><p>内存：内存是电脑中特别重要的存储器，计算机中所有程序都是在内存中运行的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;C语言中常用的关键字&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;register关键字用来控制寄存器&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：在计算机中，数据存储在四个地方：寄存器、高速缓存、内存、硬盘&lt;/p&gt;
&lt;figure clas</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>初识C语言（一）</title>
    <link href="http://example.com/2023/01/29/%E5%88%9D%E8%AF%86C%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2023/01/29/%E5%88%9D%E8%AF%86C%E8%AF%AD%E8%A8%80/</id>
    <published>2023-01-29T03:07:11.393Z</published>
    <updated>2023-02-09T12:26:17.671Z</updated>
    
    <content type="html"><![CDATA[<ol><li>写C代码</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: start </span><br><span class="line">op1=&gt;operation: Creat project</span><br><span class="line">op2=&gt;operation: Creat file</span><br><span class="line">op3=&gt;operation: Write source.file</span><br><span class="line">op4=&gt;operation: Write code</span><br><span class="line">e=&gt;end: end</span><br><span class="line"></span><br><span class="line">st(right)-&gt;op1(right)-&gt;op2(right)-&gt;op3(right)-&gt;op4(right)-&gt;e</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>数据类型</li></ol><ul><li>char</li><li>short</li><li>int</li><li>long</li><li>long long</li><li>float    ——单精度</li><li>double   ——双精度</li></ul><p>为什么会有这么多类型？</p><p>答：针对不同的数据大小所需要占用的内存，进行空间的分配有利于节省使用空间。</p><p>sizeof（）函数作用：用于计算所申请的空间大小;</p><p>计算机中的单位：bit——比特位  byte——字节</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="type">char</span>));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>变量和常量</li></ol><p>​变量的分类：局部变量和全局变量。</p><ul><li>局部变量：定义在代码块内部的变量</li><li>全局变量：定义在代码块之外的变量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;studio.h&gt;</span></span></span><br><span class="line"><span class="comment">//global var num1</span></span><br><span class="line"><span class="type">int</span> num1 = <span class="number">10</span>;</span><br><span class="line">  </span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="comment">//局部变量num2</span></span><br><span class="line">  <span class="type">int</span> num2 = <span class="number">10</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：C语言规定，变量要定义在输入代码块的最前面，否则代码执行时会报错。</p><p>变量的类型不同，决定了它们具有不同的作用域和生命周期，对于局部变量，其作用域是变量所在的局部范围，生命周期则是进入作用域生命周期开始，出作用域生命周期结束；对于全局变量，其作用域是整个工程，生命周期是整个程序的生命周期。</p><p>常量的类别：字面常量、用const修饰的常变量、#define定义的标识符常量、枚举常量（关键字enum）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Sex</span> &#123;</span></span><br><span class="line">  MALE,FEMALE,SECRET</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span>&#123;</span><br><span class="line">  <span class="type">const</span> <span class="type">int</span> n=<span class="number">10</span>; <span class="comment">//使用const进行修饰，只是使变量n具有常属性，n仍然是变量</span></span><br><span class="line">  <span class="class"><span class="keyword">enum</span> <span class="title">Sex</span> <span class="title">s</span> =</span>FEMALE;<span class="comment">//MALE，FEMALE，SECRET的值分别代表0，1，2；</span></span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>字符串</li></ol><p>由双引号引起的一串字符串称为字符串字面值，其中空字符串也叫字符串。</p><p>需要注意的是，字符串的结束标志是”\0”的转义字符，在计算机计算字符串长度时，”\0”是结束标志，但不算字符串中的内容。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> arr1[] = <span class="string">&quot;abc&quot;</span>;<span class="comment">//这种命名方式，会在字符串字符串结尾自动加上&quot;\0&quot;的转义字符作为结束标志。同时该字符串长度为3.</span></span><br><span class="line"><span class="type">char</span> arr2[] = &#123;<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>&#125;;<span class="comment">//字符串arr2[]在计算字符串长度时会是一个随机值，因为计算机只有识别道转移字符&#x27;\0&#x27;才会确定为字符串的结尾。</span></span><br></pre></td></tr></table></figure><ol start="5"><li>转义字符</li></ol><p>转义字符即改变原来的意思,例如:”\n”。</p><ol start="6"><li>选择语句</li></ol><p>常用的循环语句：</p><ul><li>while循环</li><li>for循环</li><li>do···while循环</li></ul><ol start="7"><li>数组</li></ol><p>一组相同数据类型的变量集合。数组的下标是从0开始的。</p><p>sizeof（）函数可以用来确定数组的大小。（所占用的字节大小）</p><ol start="8"><li>原码，反码，补码</li></ol><p>负数在二进制中存储时存储的是二进制的补码</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;写C代码&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
